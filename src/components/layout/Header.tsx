// This is an autogenerated file from Firebase Studio.
"use client";

import Link from 'next/link';
import { Leaf, Menu, ShoppingCart, User, Users, Sparkles, Info, Newspaper, Store, Heart } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { useAuthState } from 'react-firebase-hooks/auth';
import { auth } from '@/lib/firebase/config';
import { useCart } from '@/context/CartContext';
import { Badge } from '@/components/ui/badge';
import { Sheet, SheetContent, SheetTrigger, SheetClose } from '@/components/ui/sheet';
import { usePathname } from 'next/navigation';
import { Separator } from '../ui/separator';
import { useEffect, useState } from 'react';
import { useWishlist } from '@/context/WishlistContext';
import { cn } from '@/lib/utils';

const navLinks = [
  { href: "/shop", label: "Shop", icon: <Store className="h-5 w-5" /> },
  { href: "/inspiration", label: "Inspiration", icon: <Sparkles className="h-5 w-5" /> },
  { href: "/about", label: "About", icon: <Info className="h-5 w-5" /> },
  { href: "/blog", label: "Blog", icon: <Newspaper className="h-5 w-5" /> },
  { href: "/community", label: "Community", icon: <Users className="h-5 w-5" /> },
];

export function Header() {
  const [user] = useAuthState(auth);
  const { getCartItemCount } = useCart();
  const { wishlist } = useWishlist();
  const cartItemCount = getCartItemCount();
  const wishlistCount = wishlist.length;
  const pathname = usePathname();
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true);
  }, []);

  return (
    <header className="bg-background/80 backdrop-blur-sm sticky top-0 z-40 w-full border-b">
      <div className="container mx-auto flex h-20 items-center justify-between px-4 md:px-6">
        <Link href="/" className="flex items-center gap-2 text-xl font-bold">
          <Leaf className="h-7 w-7 text-primary" />
          <span>EcoChic</span>
        </Link>
        
        <nav className="hidden md:flex items-center gap-2">
          {navLinks.map((link) => (
             <Button key={link.href} variant="ghost" asChild className={cn("text-muted-foreground", pathname === link.href && "text-primary")}>
              <Link 
                href={link.href}
              >
                {link.label}
              </Link>
            </Button>
          ))}
        </nav>

        <div className="flex items-center gap-2">
          <Button variant="ghost" size="icon" asChild>
            <Link href="/wishlist" aria-label="Wishlist" className="relative">
              <Heart className="h-5 w-5" />
              {isClient && wishlistCount > 0 && (
                 <Badge variant="destructive" className="absolute -top-1 -right-1 h-4 w-4 justify-center p-0 text-xs">{wishlistCount}</Badge>
              )}
            </Link>
          </Button>
          <Button variant="ghost" size="icon" asChild>
            <Link href="/cart" aria-label="Shopping Cart" className="relative">
              <ShoppingCart className="h-5 w-5" />
              {isClient && cartItemCount > 0 && (
                 <Badge variant="destructive" className="absolute -top-1 -right-1 h-4 w-4 justify-center p-0 text-xs">{cartItemCount}</Badge>
              )}
            </Link>
          </Button>
          <Button variant="ghost" size="icon" asChild>
            <Link href="/account" aria-label="My Account">
              <User className="h-5 w-5" />
            </Link>
          </Button>
           <div className="md:hidden">
            <Sheet>
              <SheetTrigger asChild>
                <Button variant="ghost" size="icon">
                  <Menu className="h-6 w-6" />
                  <span className="sr-only">Toggle navigation menu</span>
                </Button>
              </SheetTrigger>
              <SheetContent side="left" className="w-[300px]">
                <div className="flex flex-col gap-6 p-6 pt-12">
                  <Link href="/" className="flex items-center gap-2 text-xl font-bold mb-4">
                      <Leaf className="h-7 w-7 text-primary" />
                      <span>EcoChic</span>
                  </Link>
                  <Separator />
                  <nav className="flex flex-col gap-2">
                    {navLinks.map((link) => (
                      <SheetClose asChild key={link.href}>
                        <Link
                          href={link.href}
                          className={cn(
                            "flex items-center gap-3 rounded-md p-3 text-base font-medium transition-colors hover:bg-muted",
                            pathname === link.href ? 'bg-muted text-primary' : 'text-foreground'
                          )}
                        >
                          {link.icon}
                          {link.label}
                        </Link>
                      </SheetClose>
                    ))}
                  </nav>
                </div>
              </SheetContent>
            </Sheet>
           </div>
        </div>
      </div>
    </header>
  );
}
